---
variables:
  DOCKER_BUILDKIT: 1
  DOCKER_TLS_CERTDIR: "/certs"
  BASH_ENV: /root/.bashrc
  ANSIBLE_COLLECTIONS_PATH: $CI_BUILDS_DIR/ansible/collections
  REGISTRY_PROXY_URL: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/
  GIT_CLONE_PATH: $ANSIBLE_COLLECTIONS_PATH/ansible_collections/$CI_PROJECT_NAMESPACE/openstack
  XDG_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PY_COLORS: "1"
  ANSIBLE_FORCE_COLOR: "1"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/"

stages:
  - lint
  - test
  - build
  - deploy

.ansible:
  cache:
    paths:
      - .cache/pip/

lint:
  stage: lint
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/jdubz/ci-python:3.10
  extends: .ansible
  before_script:
    - echo -e "[global]\ncache-dir = $PIP_CACHE_DIR" > /etc/pip.conf
    - python -m pip install -r requirements-dev.txt
    - ansible --version
    - ansible-lint --version
    - ansible-galaxy collection list
  script:
    - ansible-lint

docs:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/jdubz/ci-python:3.12
  extends: .ansible
  before_script:
    - apk add rsync
    - python -m pip install -r requirements-dev.txt
  script:
    - set -e
    - mkdir dest
    - |
      antsibull-docs sphinx-init \
        --use-current \
        --dest-dir dest \
        dubzland.openstack
    - cd dest
    - pip install -r requirements.txt
    - ./build.sh
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/jdubz/ci-python:3.10
  extends: .ansible
  before_script:
    - python -m pip install ansible-core
  script:
    - ansible-galaxy collection build
    - sha256sum "${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz" > "${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz.sha256sum"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
        --upload-file ${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz \
        ${PACKAGE_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}-openstack/${CI_COMMIT_TAG}/${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
        --upload-file ${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz.sha256sum \
        ${PACKAGE_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}-openstack/${CI_COMMIT_TAG}/${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz.sha256sum
  artifacts:
    paths:
      - "${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz"
  rules:
    - if: $CI_COMMIT_TAG

release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" \
        --description "See ${CI_PROJECT_URL}/-/blob/${CI_COMMIT_TAG}/CHANGELOG.md for more information." \
        --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz\",\"url\":\"${PACKAGE_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}-openstack/${CI_COMMIT_TAG}/${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz\"}" \
        --assets-link "{\"name\":\"${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz.sha256sum\",\"url\":\"${PACKAGE_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}-openstack/${CI_COMMIT_TAG}/${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_TAG}.tar.gz.sha256sum\"}" \
  rules:
    - if: $CI_COMMIT_TAG

galaxy:
  stage: deploy
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/jdubz/ci-python:3.10
  cache:
    paths:
      - .cache/pip/
  dependencies:
    - build
  before_script:
    - python -m pip install ansible-core
  script:
    - ansible-galaxy collection publish --token "$GALAXY_API_TOKEN" "./${CI_PROJECT_NAMESPACE}-openstack-${CI_COMMIT_REF_NAME}.tar.gz"
  rules:
    - if: $CI_COMMIT_TAG

release-docs:
  stage: deploy
  trigger: docs/ansible-collections
  rules:
    - if: $CI_COMMIT_TAG
