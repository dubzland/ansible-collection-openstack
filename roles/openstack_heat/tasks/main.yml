---
- name: Retrieve the OpenStack cluster facts
  dubzland.openstack.openstack_get_fact:
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    as: "{{ item.as }}"
  loop:
    - section: controller
      option: address
      as: _controller_address
    - section: controller
      option: http_host
      as: _controller_http_host
    - section: mysql
      option: address
      as: _mysql_address
    - section: cloud
      option: region
      as: _openstack_region_name
    - section: cloud
      option: domain
      as: _openstack_domain_name
    - section: cloud
      option: name
      as: _openstack_cloud_name

- name: Provision the OpenStack Heat service
  ansible.builtin.import_role:
    name: dubzland.openstack.openstack_component
  vars:
    openstack_component_database_user: "{{ openstack_heat_db_user }}"
    openstack_component_database_password: "{{ openstack_heat_db_password }}"
    openstack_component_databases:
      - "{{ openstack_heat_db_name }}"
    openstack_component_user: "{{ openstack_heat_service_user }}"
    openstack_component_password: "{{ openstack_heat_service_password }}"
    openstack_component_services:
      - name: heat
        type: orchestration
        description: "{{ openstack_heat_service_description }}"
        endpoints:
          - interface: public
            url: "{{ _controller_http_host }}:8004/v1/%(tenant_id)s"
          - interface: internal
            url: "{{ _controller_http_host }}:8004/v1/%(tenant_id)s"
          - interface: admin
            url: "{{ _controller_http_host }}:8004/v1/%(tenant_id)s"
      - name: heat-cfn
        type: cloudformation
        description: "{{ openstack_heat_service_description }}"
        endpoints:
          - interface: public
            url: "{{ _controller_http_host }}:8000/v1"
          - interface: internal
            url: "{{ _controller_http_host }}:8000/v1"
          - interface: admin
            url: "{{ _controller_http_host }}:8000/v1"

- name: Ensure the OpenStack Heat domain is present
  openstack.cloud.identity_domain:
    cloud: "{{ _openstack_cloud_name }}"
    name: heat
    description: Stack projects and users
    state: present

- name: Ensure the OpenStack Heat domain admin is present
  openstack.cloud.identity_user:
    cloud: "{{ _openstack_cloud_name }}"
    name: "{{ openstack_heat_domain_admin_user }}"
    password: "{{ openstack_heat_domain_admin_password }}"
    domain: heat
    state: present
  no_log: true

- name: Ensure the Heat domain admin has the admin role
  openstack.cloud.role_assignment:
    cloud: "{{ _openstack_cloud_name }}"
    domain: heat
    user: "{{ openstack_heat_domain_admin_user }}"
    role: admin

- name: Ensure the Heat stack roles are present
  openstack.cloud.identity_role:
    cloud: "{{ _openstack_cloud_name }}"
    name: "{{ item }}"
    state: present
  loop:
    - heat_stack_owner
    - heat_stack_user

- name: Ensure required Heat packages are installed
  ansible.builtin.package:
    name: "{{ openstack_heat_packages }}"
    state: present

- name: Ensure the OpenStack Heat configuration is present
  dubzland.openstack.openstack_config_template:
    src: etc/heat/heat.conf.j2
    dest: /etc/heat/heat.conf
    owner: root
    group: heat
    mode: "0640"
  notify: Restart OpenStack Heat services

- name: Perform a Heat DB sync
  ansible.builtin.command:
    cmd: heat-manage db_sync
  changed_when: false
  become: true
  become_user: heat
