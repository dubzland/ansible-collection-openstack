---
- name: Retrieve the OpenStack cluster facts
  dubzland.openstack.openstack_get_fact:
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    as: "{{ item.as }}"
  loop:
    - section: controller
      option: address
      as: _controller_address
    - section: controller
      option: ip
      as: _controller_ip
    - section: controller
      option: http_host
      as: _controller_http_host
    - section: mysql
      option: address
      as: _mysql_address
    - section: cloud
      option: region
      as: _openstack_region_name
    - section: cloud
      option: domain
      as: _openstack_domain_name
    - section: cloud
      option: name
      as: _openstack_cloud_name

- name: Set OpenStack Neutron facts
  ansible.builtin.set_fact:
    _neutron_packages: >-
      {{
        openstack_neutron_controller_packages if ('controller' in group_names)
        else openstack_neutron_compute_packages
      }}
    _neutron_services: >-
      {{
        openstack_neutron_controller_services if ('controller' in group_names)
        else openstack_neutron_compute_services
      }}

- name: Include component tasks
  ansible.builtin.include_tasks: component.yml
  when: "'controller' in group_names"

- name: Ensure required OpenStack Neutron packages are installed
  ansible.builtin.package:
    name: "{{ _neutron_packages }}"
    state: present
  register: _neutron_package_install

- name: Initialise the Neutron db upgrade fact
  dubzland.openstack.openstack_set_fact:
    section: neutron
    option: need_db_upgrade
    value: "True"
  when:
    - "'controller' in group_names"
    - ((_neutron_package_install is changed) or
      (ansible_local is not defined) or
      ('openstack' not in ansible_local) or
      ('neutron' not in ansible_local['openstack']) or
      ('need_db_upgrade' not in ansible_local['openstack']['neutron']))

- name: Refresh local facts
  ansible.builtin.setup:
    filter: ansible_local
    gather_subset: "!all"
  when: "'controller' in group_names"

- name: Ensure the core OpenStack Neutron configuration is present
  dubzland.openstack.openstack_config_template:
    src: neutron.conf.j2
    dest: /etc/neutron/neutron.conf
    owner: root
    group: neutron
    mode: "0640"
  register: _neutron_configuration
  notify: Restart OpenStack Neutron services

- name: Ensure the OpenStack Neutron ML-2 configuration is present
  dubzland.openstack.openstack_config_template:
    src: plugins/ml2/ml2_conf.ini.j2
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    owner: root
    group: neutron
    mode: "0640"
  when: "'controller' in group_names"
  register: _ml2_plugin_configuration
  notify: Restart OpenStack Neutron services

- name: Update the Neutron db upgrade fact
  dubzland.openstack.openstack_set_fact:
    section: neutron
    option: need_db_upgrade
    value: "True"
  when:
    - "'controller' in group_names"
    - (_neutron_configuration is changed) or (_ml2_plugin_configuration is changed)

- name: Refresh local facts
  ansible.builtin.setup:
    filter: ansible_local
    gather_subset: "!all"
  when:
    - "'controller' in group_names"
    - _ml2_plugin_configuration is changed

- name: Ensure the OVN metadata agent configuration is present
  dubzland.openstack.openstack_config_template:
    src: neutron_ovn_metadata_agent.ini.j2
    dest: /etc/neutron/neutron_ovn_metadata_agent.ini
    owner: root
    group: neutron
    mode: "0640"
  when: "'compute' in group_names"
  notify: Restart OpenStack Neutron services

- name: Include ovs/ovn setup tasks
  ansible.builtin.include_tasks: ovn-setup.yml

- name: Include database preparation tasks
  ansible.builtin.include_tasks: db-prepare.yml
  when: "'controller' in group_names"
